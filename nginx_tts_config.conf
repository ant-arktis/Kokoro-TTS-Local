# Nginx configuration for Kokoro TTS API Server
# Place this in your nginx sites-available directory and create a symlink to sites-enabled

server {
    listen 80;
    server_name your-domain.com;  # Replace with your actual domain or localhost
    
    # Main TTS API endpoint
    location /tts/ {
        # Proxy to the Flask API server
        proxy_pass http://127.0.0.1:5000/tts/;
        
        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Streaming settings for audio
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        
        # CORS headers (if needed)
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # Health check endpoint
    location /tts/health {
        proxy_pass http://127.0.0.1:5000/tts/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    }
    
    # Voices endpoint
    location /tts/voices {
        proxy_pass http://127.0.0.1:5000/tts/voices;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    }
    
    # Optional: Serve static files (if you want to serve the Gradio interface)
    location / {
        # You can either proxy to the Gradio interface
        # proxy_pass http://127.0.0.1:7860;
        
        # Or serve static files
        root /var/www/html;
        index index.html;
        
        # CORS headers
        add_header Access-Control-Allow-Origin *;
    }
    
    # Logging
    access_log /var/log/nginx/tts_access.log;
    error_log /var/log/nginx/tts_error.log;
}

# Optional: HTTPS configuration (uncomment and modify as needed)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#     
#     # SSL settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # Include the same location blocks as above
#     location /tts/ {
#         proxy_pass http://127.0.0.1:5000/tts/;
#         # ... (same proxy settings as above)
#     }
#     
#     location /tts/health {
#         proxy_pass http://127.0.0.1:5000/tts/health;
#         # ... (same proxy settings as above)
#     }
#     
#     location /tts/voices {
#         proxy_pass http://127.0.0.1:5000/tts/voices;
#         # ... (same proxy settings as above)
#     }
# } 